#
# Guide to commonly used Nginx variables:
#
# 1. $host:
#    - Represents the host name from the request.
#    - Example: If the request is made to "example.com", $host will be "example.com".
#
# 2. $request_uri:
#    - Represents the full original request URI, including the query string.
#    - Example: If the request is made to "/path/to/resource?query=1", $request_uri will be "/path/to/resource?query=1".
#
# 3. $scheme:
#    - Represents the protocol used in the request (http or https).
#    - Example: If the request is made using HTTPS, $scheme will be "https".
#
# 4. $server_name:
#    - Represents the name of the server handling the request.
#    - Example: If the server name is "myserver", $server_name will be "myserver".
#
# 5. $remote_addr:
#    - Represents the IP address of the client making the request.
#    - Example: If the client's IP address is "192.168.1.1", $remote_addr will be "192.168.1.1".
#
# 6. $http_user_agent:
#    - Represents the User-Agent header from the client request.
#    - Example: If the User-Agent is "Mozilla/5.0", $http_user_agent will be "Mozilla/5.0".
#
# Example usage:
# Redirect all HTTP requests to HTTPS, preserving the original URI and query string:
# return 301 https://$host$request_uri;
#
# Redirect all requests to a specific subdomain:
# return 301 https://subdomain.$host$request_uri;
#
# Redirect all requests to HTTPS, including the scheme in the redirection:
# return 301 $scheme://$host$request_uri;
#
# Log the client's IP address and User-Agent:
# log_format custom '$remote_addr - $http_user_agent';
# access_log /var/log/nginx/access.log custom;

#
# Redirect requests to add 'www' if not present in the host:
# if ($host !~* ^www\.) {
#     return 301 https://www.$host$request_uri;
# }
#

#
# Redirects all HTTP requests to HTTPS.
# This directive issues a 301 Moved Permanently response to the client,
# redirecting the request to the same URL but with the HTTPS scheme.
# The $host variable represents the host name from the request, and
# $request_uri represents the full original request URI.
#
return 301 https://$host$request_uri;